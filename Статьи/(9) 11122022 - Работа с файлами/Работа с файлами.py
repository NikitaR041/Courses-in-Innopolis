##############################_-----------------------------------------
#1 подход к работе с файлами
'''
Работа с файлами состоит в чтении, записи и перезаписи
Команды(функции):
f.open() - команда, которая открывает файл. ! Обязательно создавать переменную
f.read() - команда, которая читает файл!
=> для него есть size (f.read(size)); size - количество символов, которые нужно прочитать. Если не указать,то файл прочитается целиком.
f.write() - команда,через которой можно перезаписывать значение файла, при этом создается новый файл
'''
##f = open('Записи.txt') # По умолчанию режим r
##print(f.read())        # Всегда прописывать команду read, если нужно читать его
##f.close()              # Рекомендуется после каждого использования файла применять команду close, чтобы стирать из памяти весь не нужный мусор

'''
Существуют РЕЖИМЫ открытия файла(читать в файле!)
r - только для чтения
w - только для записи. Создаст новый файл, если не найдет с указанным именем.
r+ - для чтения и записи
w+ - для чтения и записи. Создаст новый файл для записи, если не найдет с указанным именем.
a - откроет для добавления нового содержимого. Создаст новый файл для записи, если не найдет с указанным именем
a+ - откроет для добавления нового содержимого. Создаст новый файл для чтения записи, если не найдет указанным именем.
'''
'''
r - стоит всегда по умолчанию!!!!
f = open('Записи.txt','r') == f = open('Записи.txt')
'''
##f = open('Записи.txt','w')
##f.write('Удали назкй все')              # это команда перезаписи, как я считаю это достаточно не удобно, каждый раз создавать такую команду, что чтобы записать
##f.close()
##f = open('Записи.txt') 
##print(f.read())        
##f.close()              

##############################################--------------------------------------------------------
'''
2 подход к работе с файлами
with - комадна, которая упрощает обработку ошибок, а также задач по закрытию и очистке!
readline() - команда, которая читает файл ПОСТРОЧНО!(для крупных файлов), благодаря ей,можно получать
доступ к любой строке в любой момент.
'''
##with open('Записи.txt') as f:
##    #print(f.read())
##    print(f.read(5)) # Число, которое вбито в скобках это переменная(size),которая будет выводить столько символов,сколько вы напишите(потребуете)
##    print(f.read(5)) # Далее считатся будут следуещие 5 символов

##with open('Записи.txt') as f:
####    print(f.readline()) #Читает только первую строчку
####    print(f.readline(2)) # Читает вторую строчку
##    print(f.readlines()) # Читает полностью все строчки
##    print(f.tell())

'''
для записи f.write(), если пытаться открыть несуществующий файл, то будет создаваться новый файл, при попытки открыть его во время записи
'''
##with open('Записи2.txt','w') as f:
##    f.write('Мандарины')
##    f.close()

#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'''
Существует библиотека os - операционная система, с которой удобно пользоваться с файлами
С нею удобно пользоваться с файлами:
    1)Создавать файлы,папки
    2)Переименовывать файлы,папки
    3)Удалять файлы,папки
    4)Перемещать файлы,папки
    и т.д.
'''
'''
Существует метод rename - команда, которая переименовывает файл
'''
##import os #
##os.rename('Записи.txt','New_Записки.txt') #меняет название файла
# Попробуй запустить и смотреть в папку!
'''
Метод system() позволяет октрывать различные приложения, файлы, аудио, браузер и т.д.
Главное, чтобы открывался этот файл, нужно указывать полный путь, либо же создать общую папку с Питоном и с тем приложением, с которым вы хотите его открыть
'''
##import os
##os.system('Записи.txt') #Открываеть блокнот!
'''
при помощи команды mkdir - создает папку, только нужно пользоваться system
'''
##import os
##os.system('mkdir papka') #Создает папку при помощи команды mkdir

